digraph "CStlLoader"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Arial,fontsize=11,labelfontname=Arial,labelfontsize=11];
  node [fontname=Arial,fontsize=11,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",shape=plain,label=<<TABLE CELLBORDER="0" BORDER="1"><TR><TD COLSPAN="2" CELLPADDING="1" CELLSPACING="0">CStlLoader</TD></TR>
<HR/>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">StlFormat m_fileFormat<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">uint32_t m_u32TriangleNumber<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">static constexpr int<BR ALIGN="LEFT"/> StlBinaryHeaderSize<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">static constexpr int<BR ALIGN="LEFT"/> StlBinaryDataStart<BR ALIGN="LEFT"/></TD></TR>
<HR/>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">Err loadFile(const<BR ALIGN="LEFT"/> std::string &amp;sFileName,<BR ALIGN="LEFT"/> CModel &amp;oModel)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">+</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">StlFormat getFileType<BR ALIGN="LEFT"/>() const<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">bool fileExists(const<BR ALIGN="LEFT"/> std::string &amp;sFileName)<BR ALIGN="LEFT"/> const<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">std::streampos getFileSize<BR ALIGN="LEFT"/>(const std::string &amp;sFileName) const<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">void readStlFileFormat<BR ALIGN="LEFT"/>(const std::string &amp;sFileName)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">bool isStlFileAsciiFormat<BR ALIGN="LEFT"/>(const std::string &amp;sFileName)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">bool isStlFileBinaryFormat<BR ALIGN="LEFT"/>(const std::string &amp;sFileName,<BR ALIGN="LEFT"/> std::streampos fileSize)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">Err allocateMemory<BR ALIGN="LEFT"/>(CModel &amp;oModel)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">Err loadBinary(const<BR ALIGN="LEFT"/> std::string &amp;sFileName,<BR ALIGN="LEFT"/> CModel &amp;oModel)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">Err loadAscii(const<BR ALIGN="LEFT"/> std::string &amp;sFileName,<BR ALIGN="LEFT"/> CModel &amp;oModel)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">Err stlAsciiReadLineAndCheck<BR ALIGN="LEFT"/>(std::ifstream &amp;file, const<BR ALIGN="LEFT"/> std::string &amp;sExpected, uint32<BR ALIGN="LEFT"/>_t &amp;u32CurrentLineNo)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">Err stlAsciiReadFacet<BR ALIGN="LEFT"/>(std::ifstream &amp;file,<BR ALIGN="LEFT"/> C3DFacet &amp;facet, uint32<BR ALIGN="LEFT"/>_t &amp;u32CurrentLineNo)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">Err readAsciiVertex<BR ALIGN="LEFT"/>(std::ifstream &amp;file,<BR ALIGN="LEFT"/> const std::string &amp;sHeader,<BR ALIGN="LEFT"/> size_t &amp;u32CurrentLineNo,<BR ALIGN="LEFT"/> CVector3d &amp;oVertex)<BR ALIGN="LEFT"/></TD></TR>
<TR><TD VALIGN="top" CELLPADDING="1" CELLSPACING="0">-</TD><TD VALIGN="top" ALIGN="LEFT" CELLPADDING="1" CELLSPACING="0">Err stringToFloat(const<BR ALIGN="LEFT"/> std::string &amp;sStr, float<BR ALIGN="LEFT"/> &amp;fNumber) const<BR ALIGN="LEFT"/></TD></TR>
</TABLE>>
,height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Responsible for loading STL files and populating the model."];
}
